* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
:root {
  --primary-color: #fce138;
  --secondary-color: #024e76;
  --tertiary-color: #39a6b2;
}
body {
  /* more on this crazy alphanumerical value in a minute! */
  color: var(--tertiary-color);
  font-family: Helvetica, Arial, sans-serif;
}
/* apply styles to <header> */
header {
  padding: 20px 35px;
  background-color: var(--tertiary-color);
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  /* Until Safari joins the cool kids, we'll need to add a vendor prefix to the sticky header to make sure it will be supported by that browser. */
  position: -webkit-sticky;
  /* We should always put the standardized version of a property at the end of a sequence of vendor-prefixed versions. */
  position: sticky;
  top: 0;
  background-image: url("../images/hero-bg.jpg");
  background-size: cover;
  background-position: center;
  /* places the image relative to the viewport instead of the element. */
  background-attachment: fixed;
  background-position: 80%;
  /* Add the following declaration to the header rule to keep this element on top: A higher z-index brings the element to the front while a lower z-index pushes it to the back. A value of z-index: 1; would still fix the header and form problem. We might need to add z-index to other elements, though, and we want to ensure that the header is always on top, so we'll go with 9999 to avoid future conflicts. */
  z-index: 9999;
}
header h1 {
  font-weight: bold;
  font-size: 36px;
  color: var(--primary-color);
  margin: 0;
  text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
}
header a {
  text-decoration: none;
  color: var(--primary-color);
}
header nav {
  margin: 7px 0;
}
header nav ul {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  list-style: none;
}
header nav ul li a {
  padding: 10px 15px;
  font-weight: lighter;
  font-size: 1.55vw;
  text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
}
header nav ul li a:hover {
  background: var(--primary-color);
  color: var(--secondary-color);
  border-radius: 15px;
  text-shadow: none;
}
footer {
  background: var(--primary-color);
  width: 100%;
  padding: 40px 35px;
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}
footer h2 {
  color: var(--secondary-color);
  font-size: 30px;
  margin: 0;
}
footer div {
  line-height: 1.5;
  text-align: right;
}
footer a {
  color: var(--secondary-color);
}
section {
  padding: 60px;
}
/* Hero Style Start */
.hero {
  background-image: url("../images/hero-bg.jpg");
  background-size: cover;
  background-position: center;
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  align-items: flex-start;
  /* places the image relative to the viewport instead of the element. */
  background-attachment: fixed;
  background-position: 80%;
}
.hero-cta {
  width: 35%;
  text-align: right;
  margin: 3.5%;
  color: #fff;
  font-size: 18px;
  line-height: 1.2;
}
.hero-cta h2 {
  font-style: italic;
  font-size: 55px;
  color: var(--primary-color);
  text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
}
.hero-form {
  background-color: rgba(252, 225, 56, 0.8);
  padding: 20px;
  color: var(--secondary-color);
  /* Or we can do all at once, border: 3px solid var(--secondary-color) */
  border-style: 3px solid var(--secondary-color);
  width: 40%;
  margin: 3.5%;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
  border-radius: 15px;
}
.hero-form h3 {
  margin: 0;
  font-size: 24px;
}
.hero-form p {
  margin: 5px 0 15px 0;
}
.form-input {
  border: 1px solid var(--secondary-color);
  display: block;
  padding: 7px 15px;
  font-size: 16px;
  color: var(--secondary-color);
  width: 100%;
  margin-bottom: 15px;
  border-radius: 10px;
  background-color: rgba(255, 255, 255, 0.75);
}
.form-input:focus {
  background-color: rgba(255, 255, 255, 1);
  /* There's an extra blue border around it, which looks terrible when paired with the rounded corners! This is the browser's default styling at play. */
  outline: none;
}
.hero-form label {
  margin: 0 5px;
}
.hero-form button {
  color: var(--primary-color);
  background-color: var(--secondary-color);
  border: none;
  padding: 10px 20px;
  font-size: 16px;
  border-radius: 10px;
}
.hero-form button:hover {
  background-color: var(--tertiary-color);  
}
.checkbox-wrapper input, .radio-wrapper input {
  opacity: 0;
}
.checkbox-wrapper label, .radio-wrapper label {
  position: relative;
  left: 10px;
  margin: 10px;
  line-height: 1.6;
}
.checkbox-wrapper label::before, .radio-wrapper label::before {
  content: "";
  height: 20px;
  width: 20px;
  background: rgba(255, 255, 255, 0.75);
  border: 1px solid var(--secondary-color);
  position: absolute;
  top: -4px;
  left: -30px;
}
/* We want them to be rounded */
.radio-wrapper label::before {
  border-radius: 50%;
}
/* we need to define how the buttons display when checked, or clicked. To do this, we'll need another pseudo-element to overlay on top of the first one. We can't have two ::before pseudo-elements in the same place, but we can use the ::after pseudo-element */
.radio-wrapper label::after {
  content: "";
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: var(--secondary-color);
  position: absolute;
  left: -29px;
  top: -3px;
  /* We can also make the radio buttons look a little nicer by replacing the solid background color with a gradient. */
  background-image: radial-gradient(circle, var(--tertiary-color), var(--secondary-color));
}
.checkbox-wrapper label::after {
  content: "";
  height: 6px;
  width: 14px;
  border-left: 2px solid var(--secondary-color);
  border-bottom: 2px solid var(--secondary-color);
  position: absolute;
  left: -26px;
  top: 1px;
  /* we can rotate this L just enough to make it look more like a checkmark. */
  transform: rotate(-58deg);
}
.checkbox-wrapper input + label::after, 
.radio-wrapper input + label::after {
  content: none;
}
.checkbox-wrapper input:checked + label::after, 
.radio-wrapper input:checked + label::after {
  content: "";
}
/* Hero Style End */
.section-title {
  font-size: 48px;
  color: var(--secondary-color);
  border-bottom: 3px solid;
  padding-bottom: 20px;
  text-align: center;
  margin: 0 auto 35px auto;
  width: 50%;
}
.primary-border {
  border-color: var(--primary-color);
}
.intro p {
  line-height: 1.7;
  color: var(--tertiary-color);
  width: 80%;
  font-size: 20px;
  /* instead of using display: inline-block we can use this tactic to center a block element with a width of less than 100% */
  margin: 0 auto;
  text-align: center;
}
.steps {
  background: var(--primary-color);
}
.secondary-border {
  border-color: var(--tertiary-color);
}
.step {
  margin: 50px auto;
  padding-bottom: 50px;
  width: 80%;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-between;
  border-bottom: 1px solid var(--tertiary-color);
}
/* Or:
.step:not(:last-child) {
  border-bottom: 1px solid var(--tertiary-color);
} */
.step:last-child {
  border-bottom: none;
}
.step h3 {
  color: var(--secondary-color);
  font-size: 46px;
  flex: 1 30%;
}
.step-info {
  flex: 2 70%;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
}
.step-img {
  flex: 1 12%;
  margin-right: 20px;
}
.step-img img {
  max-width: 100%;
}
.step-text {
  flex: 12;
}
.step-text h4 {
  font-size: 26px;
  line-height: 1.5;
  color: var(--secondary-color);
}
.step-text p {
  color: var(--tertiary-color);
  font-size: 18px;
}
.trainers {
  width: 100%;
  margin: 0 auto;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
}
.trainer {
  margin: 20px;
  background: var(--secondary-color);
  color: var(--primary-color);
  flex: 1;
}
.trainer img {
  width: 100%;
}
.trainer-bio {
  padding: 25px;
  line-height: 1.3;
}
.flex-row {
  display: flex;
}
.trainer-bio h3 {
  font-size: 28px;
}
.trainer-bio h4 {
  font-weight: lighter;
  font-size: 22px;
  margin-bottom: 15px;
}
.trainer-bio p {
  font-size: 17px;
}
/* Reach Out styles start */
.contact {
  background: var(--secondary-color);
}
.contact-info {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}
.contact-info > * {
  flex: 1;
  margin: 15px;
}
.contact h2 {
  color: var(--primary-color);
}
.contact-info iframe {
  height: 400px;
}
.contact-info div {
  color: white;
}
.contact-info h3 {
  color: var(--primary-color);
  font-size: 32px;
}
.contact-info p, .contact-info address {
  margin: 20px 0;
  line-height: 1.5;
  font-size: 16px;
  font-style: normal; 
}
.contact-info a {
  color: var(--primary-color);
}
.contact-form input, .contact-form textarea {
  border: 1px solid var(--secondary-color);
  display: block;
  padding: 7px 15px;
  font-size: 16px;
  color: var(--secondary-color);
  width: 100%;
  margin-bottom: 15px;
  margin-top: 5px;
  border-radius: 10px;
  background-color: rgba(255, 255, 255, 0.75);
}
.contact-form input:focus, .contact-form textarea:focus {
  background-color: rgba(255, 255, 255, 1);
  /* There's an extra blue border around it, which looks terrible when paired with the rounded corners! This is the browser's default styling at play. */
  outline: none;
}
.contact-form button {
  width: 100%;
  border: none;
  background: var(--primary-color);
  color: var(--secondary-color);
  text-align: center;
  padding: 15px 0;
  font-size: 16px;
  border-radius: 10px;
}
.contact-form button:hover {
  color: var(--primary-color);
  background: var(--tertiary-color);
}
/* Reach Out styles end */
@media screen and (max-width: 980px) {
  header {
    padding-bottom: 0;
    justify-content: center;
    /* For mobile devices, it would be a better user experience to revert back to a normal header. */
    position: relative;
  }
  header h1 {
    width: 100%;
    text-align: center;
  }
  header nav ul {
    margin-top: 20px;
    width: 100%;
    justify-content: center;
  }
  header nav ul li a {
    font-size: 20px;
  }
  footer h2, footer div {
    text-align: center;
    width: 100%;
  }
  .hero-cta, .hero-form {
    width: 100%;
  }
  .hero-cta {
    text-align: center;
  }
  .section-title {
    width: 80%;
  }
  .trainer {
    flex: 0 70%;
  }
  .contact-info iframe{
    flex: 1 100%;
  }
}
@media screen and (max-width: 768px) {
  section {
    padding: 30px 15px;
  }
  .step h3 {
    flex: 1 100%;
    text-align: center;
  }
  .step-info {
    flex: 2 100%;
    text-align: center;
    justify-content: center;
  }
  .step-img {
    flex: 0 32%;
    margin-right: 0;
    margin-top: 15px;
    margin-bottom: 15px;
  }
  .step-text {
    flex: 100%;  
  }
}
@media screen and (max-width: 575px) {
  .hero-form button {
    width: 100%;
  }
  .section-title {
    width: 95%;
  }
  .intro p {
    width: 100%;
  }
  .trainer {
    flex: 0 100%;
  }
  .contact-info {
    text-align: center;
  }
  .contact-info > * {
    flex: 0 100%;
  }
  .contact-form {
    order: 3;
  }
}